---
title: "Estimation in Two-phase, Multi-wave Sampling"
author: "Jasper Yang"
date: "2024-01-30"
output: html_document
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)

library(optimall)
library(DiagrammeR)
library(survey)
library(datasets)
library(dplyr)

data(MatWgt_Sim, package = "optimall")
```


## Introduction

Two-phase, multi-wave sampling is an appealing strategy for the design of validation studies when initially observed data are subject to measurement error (McIsaac and Cook 2015, Chen and Lumley 2020, Shepherd et al. 2023). One of `optimall`'s primary objectives is to facilitate the implementation of these studies in `R`, focusing particularly on the optimum allocation of samples, stratification, and storage of relevant information during the design stage. The `optimall` workflow is designed to blend smoothly with packages specific to the estimation stage, such as the comprehensive `survey` package, so `optimall` itself does not offer functions for estimation.

Nevertheless, estimation is the ultimate goal of a survey. This vignette describes how estimation with the `survey` package can be conducted from a survey designed with `optimall`. It begins with a brief summary of the theoretical considerations for multi-phase and multi-wave sampling. It then presents three unbiased estimators that can be used in these settings and demonstrates how they can be calculated using `optimall` and `survey`. The final section presents the results of simulations comparing the three estimators. In most cases, post-stratified weights lead to the most efficient estimators. 

## Theoretical background

####  Design-based estimation: IPW and Generalized Raking in a Single Phase, Wave
Broadly, there are two classes of survey estimators: design-based and model-based. This vignette focuses on design-based estimators, which are typically constructed by assigning weights to sample observations based on probabilistic properties of the sampling design. A simple example of a design-based estimator for a single phase design is the Horwitz-Thompson inverse probability weighted (IPW) estimator for a population total $Y_t$,

$$
\hat{T}_{IPW} = \sum_{i =1}^n R_i\frac{y_i}{\pi_i},
$$
where individuals in the sample of size $n$ are indexed by $i = 1, ..., N$, $R_i$ is an indicator for the inclusion of individual $i$ in the sample, $\pi_i$ is the sampling probability for person $i$, and $y_i$ is the observed value. Under simple stratified sampling, $\pi_i = \frac{n_k}{N_k}$ for individuals in the same stratum, $k=  1, ..., K$, where $n_k$ denotes the sample size in stratum $k$ and $N_k$ denotes the population size of stratum $h$. In this case, the IPW estimator becomes

$$
\hat{T}_{IPW} = \sum_{k=1}^K\sum_{i \in I_k}R_i\frac{N_k}{n_k}y_i,
$$
where $I_k$ is the set of indices for individuals in stratum $k$. This estimator is unbiased for the population total, but its variance may be large if sampling fractions are small in any strata. The Neyman and Wright allocations which can be implemented in `optimall` are optimal for this estimator.

Efficient alternatives to IPW estimators exist when prior information on the entire population is available. A popular design-based estimator in the presence of known auxiliary variables is the generalized raking estimator, which improves on IPW by adjusting weights to ensure that the estimated totals of auxiliary variables match the known phase 1 totals (Breslow et al. 2009). Let $x_i$ be an auxilary variable which was observed for the whole phase 1 cohort and is correlated with the variable of interest $y_i$. Generalized raking adjusts each individual inverse-probability weight by a factor of $g_i$. Under simple stratified sampling, we have $w^*_i = \frac{g_i}{\pi_i} = g_i\frac{N_k}{n_k}$ and the estimator is 

$$
\hat{T}_{GR} = \sum_{k=1}^K\sum_{i \in I_k}R_iw^*_iy_i = \sum_{k=1}^K\sum_{i \in I_k}R_ig_i\frac{N_k}{n_k}y_i ,
$$
where the $g_i$ are chosen such that

$$
\sum_{k=1}^K\sum_{i \in I_k}R_ig_i\frac{N_k}{n_k}x_i = \sum_{i=1}^N x_i
$$

Many $g_i$ values may satisfy this condition, so the new weights are chosen to be as close as possible to the IPW weights based on minimization of a pre-specified distance metric $\sum_{i=1}^NR_id(g_i\frac{1}{\pi_i}, \frac{1}{\pi_i})$.

When the auxiliary variable is correlated with the variable of interest, generalized raking is more efficient than traditional IPW estimators. Neyman and Wright allocations are nearly optimal for generalized raking (Chen and Lumley 2022). 

<!--  ## Multi-wave sampling

Consider a multi-wave sampling design in which $n$ samples are collected across $T$ waves, where the sample size in the $t$-th wave ($t = 1, ...,T$) is denoted $n_t$. Extending the design-based estimation methods described above to this setting involves some thought because the results of wave $t_1$ influence the allocation, and therefore the sampling probabilities, for waves $t > t_1$. 

### Simple example: Stratified random sampling as a multi-wave design

We begin this section with an interesting example. Consider the case of traditional (single-wave, without replacement) stratified random sampling, where $n_k$ samples are to be drawn from stratum $k$, and each element in stratum $k$ has the same sampling probability $\pi_{k}$ = $\frac{n_k}{N_k}$. One way to frame this design is as a multi-wave sample with $n$ waves of size 1. After all, the without-replacement nature of sampling means that sampling can be considered to be conducted sequentially, with the sampling frame being updated after each draw by the removal of the just-drawn element. More formally, we can consider selecting a sample at wave $t$ to involve first selecting which stratum to sample from, and then selecting a sample from the chosen stratum via simple random sampling. Accordingly, the sampling probability for element $i$ in stratum $k$ at wave 1 is $$\pi_{ik1} = \underbrace{\frac{n_k}{n}}_{\text{select stratum}} \cdot \underbrace{\frac{1}{N_k}}_\text{select element from it}.$$ At wave $t$, this becomes

$$
\pi_{ikt} = \underbrace{\frac{n_k - \sum_{s=1}^{t-1}\sum_{s \in I_k}R_s}{n - (t-1)}}_{\text{select stratum}} \cdot \underbrace{\frac{1}{N_k- \sum_{s=1}^{t-1}\sum_{s \in I_k}R_s}}_{\text{select element from it}}, 
$$

where $\sum_{s=1}^{t-1}\sum_{s \in I_k}R_s$ is the number of elements selected from $k$ in prior waves. Clearly, the results of prior "waves" influence the sampling probabilities of later waves. Yet, the overall inclusion probabilities work out to $\frac{n_k}{N_k}$. 

Some notes:
* I suspect that our difference is that $R_s$ is correlated with the new $n_k$

-->

#### Special considerations for Two-phase sampling

Two-phase sampling involves collecting a large sample of relatively inexpensive variables in phase 1 and then collecting expensive variables on a subset of the phase 1 samples in phase 2. A key feature of two-phase sampling is that the information collected in phase 1 is used to inform a more efficient phase 2 sampling design. A side effect of this gain in efficiency is that the marginal inclusion probabilities, $\pi_i$, for elements sampled in phase 2 are unknown because their calculation requires consideration of the phase 2 sampling designs that would arise under every possible phase 1. Specifically, the exact inclusion probability $\pi_i$ in a two-phase design is

$$
\pi_i = \sum_{s_a}R_{ai} P(s_a)\pi_{i|s_a}
$$
 
where $s_a$ is a phase 1 sample, $P(s_a)$ is the probability of a given $s_a$ being realized, and $R_{ai}$ is an indicator for the inclusion of element $i$ in a given phase 1 sample 

Because $\pi_i|{sa}$ depends on the results of $s_a$, $\pi_i|{sa}$ is only known for the realized $s_a$. This limitation make standard IPW techniques infeasible in the two phase setting, so other approaches are required to construct unbiased estimators and approximate their variances. Chapter 9 of Sarndal et al. (1992) details the special considerations required to construct such estimators. Here, we briefly describe their most important results for the case where stratified random sampling is used in phase 2 based on strata defined from phase 1 variables.

Consider strata $k = 1,...,K$. Let $N$ be the population size, $n_a$ be the phase 1 sample size, and $n$ be the phase 2 sample size. Denote $n_{ak}$ and $n_k$ for the phase 1 and phase 2 sample sizes respectively in stratum $k$. An unbiased design-based estimator for the population total of $T = \sum_{i=1}^N y_i$ is

\begin{equation}
\tag{1} \label{eq:eq1}
\hat{T}_{TP} = \sum_{i \in I_{s_a}}\frac{1}{\pi_{ai}\pi_{i|s_a}}y_i, 
\end{equation}

where $\pi_{1i}$ is the phase 1 sampling probability for element $i$, $\pi_{i|s_1}$ is the phase 2 sampling probability given the realized phase 1 sample, denoted $s_a$, and $I_{s_a}$ is the set of indices for individuals sampled in $s_a$. The idea of this estimator is to estimate the IPW estimator that would have been produced if $y_i$ was observed for the entire phase 1 sample $s_a$. In this sense, $\hat{t}$ is an estimator of an estimator. Accordingly, the variance is not straightforward, but Sarndal et al. show that it can be written as

\begin{equation}
\tag{2} \label{eq:eq2}
V(\hat{T}_{TP}) = \sum_{i=1}^N\sum_{j=1}^N \text{Cov}(R_{ai}, R_{aj})\frac{y_i}{\pi_{a_i}} \frac{y_j}{\pi_{aj}} + \mathbb{E}\left[\sum_{i \in I_{s_a}}\sum_{j \in I_{s_a}} \text{Cov}(R_i, R_j|S_a) \frac{y_i}{\pi_{ai}\pi_{i|s_a}}\frac{y_j}{\pi_{aj}\pi_{j|s_a}} \right],
\end{equation}

where $R_{ai}$ and $R_{aj}$ are the phase 1 sample inclusion indicators for elements $i$ and $j$, and $R_{i}$ and $R_{j}$ are not phase 2 sample inclusion indicators. The expectation in the second term is with respect to the phase 1 design. This variance is estimated unbiasedly by

\begin{equation}
\tag{3} \label{eq:eq3}
\hat{V}(\hat{T}_{TP}) = \sum_{i \in I_{s_a}}\sum_{j \in I_{s_a}}  \frac{\text{Cov}(R_{ai}, R_{aj})}{\pi_{aij}\pi_{ij|s_a}}\frac{y_i}{\pi_{a_i}} \frac{y_j}{\pi_{aj}} + \sum_{i \in I_{s_a}}\sum_{j \in I_{s_a}} \frac{\text{Cov}(R_i, R_j|S_a)}{\pi_{ij|s_a}} \frac{y_i}{\pi_{ai}\pi_{i|s_a}}\frac{y_j}{\pi_{aj}\pi_{j|s_a}}.
\end{equation}

If phase 1 is a simple random sample and phase 2 is a stratified random sample, then we have 
$$
\hat{T}_{TP} = \sum_{k=1}^K\sum_{i \in I_{k}}R_i\frac{N}{n_a}\frac{n_{ak}}{n_{k}}y_i = \frac{N}{n_a}\sum_{k=1}^K\frac{n_{ak}}{n_{k}}\sum_{i \in I_k}R_iy_i,
$$

and

$$
V(\hat{T}_{TP}) = N^2\frac{1 - \frac{n_a}{N}}{n_a}\text{Var}_\text{pop}(y) + \mathbb{E}\left[N^2\sum_{k=1}^K (\frac{n_{ak}}{n_a})^2\frac{1-\frac{n_k}{n_{ak}}}{n_k}\text{Var}_{s_{ak}}(y) \right],
$$
where $\text{Var}_\text{pop}(y)$ is the variance of $y$ in the population and $\text{Var}_{s_{ak}}(y)$ is the variance in stratum $k$ of the phase 1 sample. This variance is estimated unbiasedly by

\begin{equation}
\tag{4} \label{eq:eq4}
\hat{V}(\hat{T}_{TP}) = N(N-1)\sum_{k=1}^K\left(\frac{n_{ak}-1}{n_a-1} - \frac{n_k - 1}{N-1}\right)\frac{n_{ak}S^2_{y,s_k}}{n_a n_k} + \frac{N(N-n_a)}{n_a-1}\sum_{k=1}^K \frac{n_{ak}}{n_a}\left(\frac{1}{n_k}\sum_{i=1}^{n_k}R_iy_i - \frac{1}{N}\sum_{k=1}^K\sum_{i \in I_k}R_i\frac{N}{n_a}\frac{n_{ak}}{n_{k}}y_i\right)^2,
\end{equation}
where $S^2_{y,s_k}$ is the phase 2 sample variance of $y$ in stratum $k$. The `twophase()` function in the `survey` package uses (\ref{eq:eq3}) to calculate the variance for method `"full"` and (\ref{eq:eq4}) for method `"approx"` or `"simple"`.

#### Two-phase, multi-wave sampling

The efficiency gains from collecting auxilary information in phase 1 can be improved even further by breaking phase 2 into waves and updating the sampling design after each wave. Consider collecting $n$ samples across $T$ waves, where the sample size in the $t$-th wave ($t = 1, ...,T$) is denoted $n_t$. This approach presents a similar challenge to the multi-phase setting, as the results  of wave $t$ influence the allocation, and therefore the sampling probabilities, for waves $t^* > t$. 

Broadly, a two-phase, multi-wave sampling design consists of the following steps:

1. Phase 1: Draw a $n_a$ samples from the population in Phase 1 according to a SRS (or other) design.
2. Construct strata (indexed with $h = 1, ..., H$) based on information gathered in Phase 1.
3. Phase 2, Wave 1: Allocate samples to strata according to optimum allocation determined using estimates of optimality parameters from phase 1 data.
4. Phase 2, Wave 2: Allocate samples to strata according to optimum allocation determined using estimates of optimality parameters from phase 2, wave 1 data.\
⋮\
Phase 3, Wave T: Allocate samples to strata according to optimum allocation determined using estimates of optimality parameters from data collected in prior waves of phase 2.

## Estimation approaches after two-phase, multi-wave sampling

Here, we present three unbiased estimators for a population total under two-phase, multi-wave sampling.

#### 1. Wave-specific conditional probabilties

Consider the unbiased two-phase estimator for the population total in (\ref{eq:eq1}), which, when stratified random sampling is used in Phase 2, can be written:

\begin{equation}
\tag{5} \label{eq:eq5}
\hat{T}_{TP} = \sum_{i \in I_{s_a}}\frac{1}{\pi_{ai}\pi_{i|s_a}}y_i  = \sum_{k=1}^K \sum_{i \in I_{k, s_a}} \frac{1}{\pi_{ai}\pi_{k|s_a}}y_i,
\end{equation}

where $\pi_{k|s_a}$ is the phase 2 sampling probability for observations in stratum $k$ conditional on the observed Phase 1, and $I_{k, s_a}$ is the set of indices for individuals sampled in $s_a$ in stratum $k$. While $\pi_{ai}$ can be determined by the Phase 1 design, $\pi_{\cdot|s_a}$ becomes more complex when Phase 2 is conducted over multiple waves, as the result from each wave affects the sampling probabilities for subsequent waves. A natural extension of (\ref{eq:eq5}) is to continue conditioning the probabilities at each wave. Now, however, an element can only be sampled in a given wave if it was not sampled in any prior waves. For a two-phase, multi-wave sample with $T$ waves in phase 2, this would yield

\begin{equation}
\tag{6} \label{eq:eq6}
\hat{T}_{TP} = \sum_{t^* = 1}^T\sum_{k=1}^K\sum_{i \in I_{k,s_a, t^*}}\frac{1}{\pi_{ai}(1-\pi_{k1|s_a})(1-\pi_{k2|s_a, s_{b_1}}) \cdots (1-\pi_{k(t^*-1)|s_a, s_{b1},..., s_{b(t^*-2)}})\pi_{kt^*|s_a, s_{b_1}, ..., s_{b_{t^*-1}}}}y_i,
\end{equation}

where $I_{k, s_a,t^*}$ is now the set of sample indices for elements in stratum $k$ that were sampled in $s_a$ and in wave $t^*$. $\pi_{kt|s_a, s_{b_1}, ..., s_{b_{t-1}}}$ is the probability that a member of stratum $k$ is sampled in phase 2, wave t, conditional on the observed waves $b_1$ through $b_{t-1}$.

While this estimator is unbiased for the true population total, the variance is even more complicated than the variance in (\ref{eq:eq2}) because the expectation term now includes more levels of conditioning. 

#### 2. Post-stratification
The examples contained in the `optimall` package vignettes use post-stratification weights to conduct estimation. As discussed by Holt and Smith (1979), Valliant (1993) and Lumley, Shaw, and Dai (2011), post-stratification is a robust and efficient estimation method that assigns weights to sample elements based on strata constructed after the sample has been collected rather than relying on pre-specified sampling probabilities as traditional IPW estimators do. This approach is useful in the multi-wave sampling setting because it does not require computation of exact, or even wave-conditional, inclusion probabilities (nor does variance estimation involve their pairwise covariances). Instead, the post-stratification approach assigns the same weight to every member of stratum $k$, $\frac{N_k}{n_k} = \frac{N_k}{\sum_{t=1}^T n_{tk}}$, where $n_{tk}$ is the number of samples selected from stratum $k$ at wave $t$. This weight is the inverse of the final sampling fractions, and it reflects what the exact IPW weights would be if the sampling at each wave was independent and SRS was used within each stratum. The final estimator is simple to calculate and takes the form 

$$
\hat{T}_{POST} = \sum_{k=1}^K\sum_{i \in I_k}R_i\frac{N_k}{n_k}y_i,
$$

Conveniently, post-stratification can be viewed as a simple case of generalized raking. Thus, Neyman and Wright allocations are still approximately optimal (Chen and Lumley 2022). 

<!-- Consider a survey with three waves. If sampling at each wave were independent and stratified, the probability of individual $i$ being included in the sample would be

$$
\begin{align*}
P(i \in I_s) &= P(i \in I_1 \cup i \in I_2 \cup i \in I_3)\\
 &=
P(i \in I_{1}) + P(i \notin I_{1})\cdot P(i \in I_2) + P(i \notin I_1 \cap i \notin I_2) \cdot P(i \in I_3),
\end{align*}
$$ 

where $I_S$ is the set of indices for the entire phase 2 sample and $I_t$ is the set of indices sampled at wave $t$. Let $n_{tk}$ be the number of samples selected from stratum $k$ at wave $t$. Then we have

$$
\begin{align*}
P(i \in I_{s}) &= P(i \in I_k) \quad \text{(for }i\text{ in stratum }k{)} \\
&= \frac{n_{1k}}{N_{k}} + \left(1 - \frac{n_{1k}}{N_k}\right)\cdot \frac{n_{2k}}{N_k-n_{1k}} + \left(1 - \left(1 - \frac{n_{1k}}{N_k}\right)\cdot \frac{n_{2k}}{N_k-n_{1k}}\right)\cdot \frac{n_{3k}}{N_k-n_{1k} - n_{2k}}\\
&= \frac{n_{1k}}{N_{k}} +\frac{n_{2k}}{N_k} + \frac{n_{3k}}{N_k} = \frac{n_{1k}+n_{2k}+ n_{3k}}{N_k},\\
\end{align*}
$$
and so the weight $\frac{1}{\pi_i}$ would be $\frac{N_k}{n_{1k}+n_{2k}+ n_{3k}}$ exactly the post-stratification weight. 
--> 

#### 3. Each wave as a unique phase 2 sample

Another framework to construct an unbiased estimator for $T$ is to consider each wave as a unique phase 2 sample. In this case, the corresponding Phase 1 sample is different for each wave. We can then construct (unbiased) estimators as in (\ref{eq:eq1}) for each wave and average the results to obtain a final estimator. There is no straightforward expression for the variance of this estimator, but the empirical variance is assessed in the simulation studies at the end of this vignette and shown to be notably larger than the post-stratification variance.   

## How to implement each strategy with `optimall` and `survey`

In this section we demonstrate how to estimate a population mean using the three estimators defined in the previous section with `optimall` and `survey`. For this example, we simulate a phase 1 `iris` dataset with n = 996 observations from three species, which we use as strata, assuming phase 1 is drawn as a simple random sample from a superpopulation. Sepal Length and Species are available at phase 1, and Petal Length is the variable of interest available at phase 2. We conduct phase 2 sampling over three waves using `optimall`, collecting Petal Length for 50 samples at each wave. The final dataset looks like:

```{r example, echo = FALSE, results = 'hide'}
#####
## Generate data
#####
set.seed(123)
n <- c(rmultinom(1, 996, c(1/3, 1/3, 1/3)))
col1 <- c(rep("setosa", times = n[1]),
          rep("versicolor", times = n[2]),
          rep("virginica", times = n[3]))
sl <- c(rnorm(n[1], 5.006, 0.124),
        rnorm(n[2], 5.936, 0.266),
        rnorm(n[3], 6.588, 0.404))
pl <- c(rnorm(n[1], 1.462, 0.173),
        rnorm(n[2], 4.260, 0.470),
        rnorm(n[3], 5.552, 0.552))
full_data <- data.frame("id" = 1:996,
                    "Species" = as.factor(col1),
                    "Sepal.Length" = sl,
                    "Petal.Length" = pl)
phase1_data <- full_data[,-4]

####
## Multiwave object setup
####

Survey <- multiwave(phases = 2, waves = c(1, 3),
                    phase1 = phase1_data)

set_mw(Survey, phase = 2, slot = "metadata") <- list(id = "id",
                                                     strata = "Species",
                                                     design_strata = "strata",
                                                     include_probs = TRUE)

####
## Wave 1
####

### Allocation: X-allocate with Phase 1 sepal length
Survey <- apply_multiwave(Survey, phase = 2, wave = 1,
                          fun = "optimum_allocation",
                          y = "Sepal.Length",
                          nsample = 50, method = "Neyman")

# get_mw(Survey, phase = 2, wave = 1, slot ="design")

### Select samples 
Survey <- apply_multiwave(Survey, phase = 2, wave = 1,
                          fun = "sample_strata", 
                          n_allocated = "stratum_size",
                          probs = ~stratum_size/npop)

### "Collect" data
set_mw(Survey, phase = 2, wave = 1, slot = "sampled_data") <- 
  full_data[full_data$id %in% get_mw(Survey, phase = 2, wave = 1,
                                     slot = "samples")$ids, 
            c("id", "Petal.Length")]

Survey <- merge_samples(Survey, phase = 2, wave = 1)

####
## Wave 2
####

### Allocation: Neyman allocation with already-collected phase 2 data.
Survey <- apply_multiwave(Survey, phase = 2, wave = 2,
                          fun = "allocate_wave",
                          y = "Petal.Length",
                          nsample = 50, allocation_method = "Neyman",
                          already_sampled = "sampled_phase2")

# get_mw(phase = 2, wave = 2, slot = "design")

### Select samples 
Survey <- apply_multiwave(Survey, phase = 2, wave = 2,
                          fun = "sample_strata", 
                          n_allocated = "n_to_sample",
                          probs = ~n_to_sample/(npop - nsample_prior),
                          already_sampled = "sampled_phase2")

### "Collect" data
set_mw(Survey, phase = 2, wave = 2, slot = "sampled_data") <- 
  full_data[full_data$id %in% get_mw(Survey, phase = 2, wave = 2,
                                     slot = "samples")$ids, 
            c("id", "Petal.Length")]
Survey <- merge_samples(Survey, phase = 2, wave = 2)

####
## Wave 3
####

### Allocation: Neyman allocation with already-collected phase 2 data.
Survey <- apply_multiwave(Survey, phase = 2, wave = 3,
                          fun = "allocate_wave",
                          y = "Petal.Length",
                          nsample = 50, allocation_method = "Neyman",
                          already_sampled = "sampled_phase2")

# get_mw(phase = 2, wave = 3, slot = "design")

### Select samples 
Survey <- apply_multiwave(Survey, phase = 2, wave = 3,
                          fun = "sample_strata", 
                          n_allocated = "n_to_sample",
                          probs = ~n_to_sample/(npop - nsample_prior),
                          already_sampled = "sampled_phase2")

### "Collect" data
set_mw(Survey, phase = 2, wave = 3, slot = "sampled_data") <- 
  full_data[full_data$id %in% get_mw(Survey, phase = 2, wave = 3,
                                     slot = "samples")$ids, 
            c("id", "Petal.Length")]
Survey <- merge_samples(Survey, phase = 2, wave = 3)

### Final dataset for analysis
survey_data <- get_mw(Survey, phase = 2, wave = 3, slot = "data")

### Clean up for printing
survey_data <- survey_data[,c("id", "Species", "Sepal.Length", 
                              "Petal.Length", "sampled_phase2",
                              "sampled_wave2.1", "sampled_wave2.2",
                              "sampled_wave2.3", "sampling_prob")]
survey_data <- survey_data[order(-survey_data$sampled_phase2, 
                                 survey_data$id), , drop = FALSE]
```

```{r}
head(survey_data)
```

The code to conduct multi-wave sampling and generate this data frame using `optimall` is provided in the appendix.

#### 1. Post-stratification

Post-stratification is straightforward to implement with the `twophase` function in `survey`. We start by initializing the twophase design.

```{r}
design <- twophase(id = list(~id, ~id), strata = list(NULL, ~Species),
                   subset = ~as.logical(sampled_phase2),
                   data = survey_data, method = "simple")
```

Note that here we use `method = "simple` because phase 1 is a simple random sample and phase 2 was a stratified random sample. We then use `calibrate()` to perform post-stratification using Species as the stratification variable:

```{r}
pst_design <- calibrate(design, phase = 2, formula = ~Species)
```

And then compute the estimate for the mean

```{r}
pst_est <- svymean(~Petal.Length, design = pst_design)
pst_est
```

##### Post-stratification with raking

To obtain an even more efficient estimator, we can rake on the Sepal.Length variable.

```{r}
pst_design_rake <- calibrate(pst_design, ~Sepal.Length,
                                   phase = 2, calfun = "raking")
pst_est_rake <- svymean(~Petal.Length, design = pst_design_rake)
pst_est_rake
```

#### 2. Wave-specific conditional probabilities

The wave-specific conditional probabilities approach is less efficient than post-stratification and more complicated because it requires specificiation of the pairwise element inclusion probabilities. Still, it is possible to implement with `optimall` and `survey`.

As of `survey` package version 4.4-2, the `twophase()` function accepts a matrix of pairwise sampling probabilities. (\ref{eq:eq3}) requires these pairwise sampling probabilities, and `twophase()` cannot calculate them on its own because they depend on both the stratum that an element belongs to and the wave in which it was sampled. Elements sampled in different waves or belonging to different strata have independent sampling probabilities, so their pairwise probability is simply the product of their individual inclusion probabilities, but elements from the same stratum and sampled in the same wave have correlated sampling probabilities. 

We can construct the pairwise sampling probability matrix with:

```{r}
### Only need pairwise probs for elements sampled in phase 2
phase2_data <- survey_data[survey_data$sampled_phase2 == 1,]
phase2_data <- dplyr::mutate(phase2_data, 
                             phase2_wave = case_when(sampled_wave2.1 == 1 ~ 1,
                                                     sampled_wave2.2 == 1 ~ 2,
                                                     sampled_wave2.3 == 1 ~ 3))

### Combine wave-specific designs
designW123 <- dplyr::bind_rows(cbind(phase2_wave = 1, 
                                     get_mw(Survey, 2, 1, "design")),
                               cbind(phase2_wave = 2, 
                                     get_mw(Survey, 2, 2, "design")),
                               cbind(phase2_wave = 3, 
                                     get_mw(Survey, 2, 3, "design")))

### Merge any differing column names, compute dependent probability as n_k/N_k*
### n_k/(N_k-1), merge with phase2_data
designW123 <- designW123 |>
  dplyr::mutate(n_to_sample = dplyr::coalesce(n_to_sample, stratum_size),
                nsample_prior = ifelse(is.na(nsample_prior), 
                                       0 , nsample_prior),
                dependent_prob = n_to_sample/(npop - nsample_prior)*
                  n_to_sample/(npop - nsample_prior - 1)) #n/N*n/(N-1)
  
phase2_data <- phase2_data |>
  dplyr::left_join(designW123, by = c("Species" = "strata", "phase2_wave")) 

### Create pairwise probability matrix.
### For independent obs, just take product. Otherwise take dependent prob
independent_probs <- with(phase2_data, outer(sampling_prob, sampling_prob, "*"))
dependent_probs <- with(phase2_data, 
                             outer(sqrt(dependent_prob), 
                                   sqrt(dependent_prob), "*"))

# Logical matrix of whether each pair is independent or dependent,
is_dependent <- with(phase2_data, outer(Species, Species, "==")) & 
               with(phase2_data, outer(phase2_wave, phase2_wave, "=="))

# Final matrix keeps dependent or independent
pairwise_probs <- ifelse(is_dependent, dependent_probs, independent_probs)

# Replace diag with element sampling probs 
diag(pairwise_probs) <- phase2_data$sampling_prob
```

With this pairwise probability matrix, we can now compute the estimate for the sample mean with `twophase()`

```{r}
cp_design <- twophase(id = list(~id, ~id), strata = list(NULL, ~Species),
                   subset = ~as.logical(sampled_phase2),
                   data = survey_data, probs = list(~NULL, pairwise_probs))

# This give NA - I think I am providing the pairwise probs incorrectly
# cp_est <- svymean(~Petal.Length, design = cp_design)
# cp_est
```

## Comparing estimation methods through simulation

To compare the performance of these two estimators, we perform two-phase, multiwave sampling on a simulated dataset and present the results from each estimation strategy in tables below. 

<!---

With n = 50:

| Case                                  | True mean | Estimate | Coverage | Oracle Coverage | ASE    | ESE    | RMSE   | Bias to ESE |
|---------------------------------------|-----------|----------|----------|-----------------|--------|--------|--------|-------------|
| Post-stratification                   | 3.0573    | 3.0576   | 0.956    | 0.952           | 0.0292 | 0.0288 | 0.0288 |             |
| Reviewer's Case                | 3.0573    | 3.0569   | 0.948    | 0.956           | 0.0296 | 0.0304 | 0.0304 |             |
| Exact Weights                      | 3.0573    | 3.0578   | 0.951    | 0.955           | 0.0300 | 0.0304 | 0.0304 |             |
| Combined results of different surveys | 3.0573    | 3.0578        |   0.951 | 0.955      |  0.0300      |  0.0304      | 0.0304       |        |      

n = 12: 

| Case                                  | True mean | Estimate | Coverage | Oracle Coverage | ASE    | ESE    | RMSE   | Bias to ESE |
|---------------------------------------|-----------|----------|----------|-----------------|--------|--------|--------|-------------|
| Post-stratification                   | 3.0573    | 3.0600   | 0.911    | 0.952           | 0.0535 | 0.0597 | 0.0598 |             |
| Reviewer's Case                | 3.0573    | 3.0645   | 0.923    | 0.955           | 0.0451 | 0.0673 | 0.0677 |             |
| Exact Weights                      | 3.0573    | 3.0647   | 0.924    | 0.957           | 0.064 | 0.0675 | 0.0679 |             |
| Combined results of different surveys | 3.0573    | 3.0647        | 0.957         | 0.064                |   0.0679     |        |        |             |

Note on these variance estimates: As $n$ gets smaller, the post-stratified ase estimate starts to underestimate the ese more - see Sarndal 7.6 and (here)[https://www.sciencedirect.com/topics/mathematics/poststratification] for an idea about why - there is a second order term that makes true post-stratified variance larger that just a stratified random sampling estimate with the same strata. This happens because the groups/strata are also random. 

--->

## References
* Chen, T., & Lumley, T. (2022). Optimal sampling for design‐based estimators of regression models. Statistics in medicine, 41(8), 1482-1497.
* Holt, D., & Smith, T. F. (1979). Post stratification. Journal of the Royal Statistical Society Series A: Statistics in Society, 142(1), 33-46.
* McIsaac MA, Cook RJ. Adaptive sampling in two‐phase designs: a biomarker study for progression in arthritis. Statistics in Medicine. 2015 Sep 20;34(21):2899-912.
* Shepherd BE, Han K, Chen T, Bian A, Pugh S, Duda S, Lumley T, Heerman WJ, Shaw  PA (2023). “Multiwave validation sampling for error-prone electronic health records.” Biometrics, 79(3), 2649–2663. doi:10.1111/biom.13713.
* Valliant R (1993). “Poststratification and conditional variance estimation.” Journal of the American Statistical Association, 88(421), 89–96.
* Wright, T. A simple method of exact optimal sample allocation under stratification with any mixed constraint patterns.2014; Statistics, 07.

## Appendix

The code to generate the example `iris` dataset estimation dataset with `optimall` is provided below:

```{r appendix, ref.label = "example", echo=TRUE, eval=FALSE}

```
